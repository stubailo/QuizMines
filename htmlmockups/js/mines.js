// Generated by CoffeeScript 1.3.3
(function() {
  var end_question_time, flag, init_chat, init_ip_form, log_messages, move, question_time, render_board, server_url, start_update_clock, update, update_buddy_list, update_url, update_view, win,
    _this = this;

  server_url = "http://10.156.25.239:5000";

  start_update_clock = function() {
    return setInterval(update, 3000);
  };

  update_url = function() {
    server_url = $("#ip_form input").val();
    return false;
  };

  update = function() {
    return $.ajax({
      url: server_url,
      success: update_view
    });
  };

  question_time = function(question) {
    $("#question_dialog").show();
    $("#question_question").text(question);
    return $("#question_dialog form").submit(function(event) {
      event.preventDefault();
      $.ajax({
        url: server_url,
        data: {
          answer: $("#question_dialog input[type=text]").val()
        },
        success: update
      });
      return false;
    });
  };

  win = function() {
    return $("#win").show();
  };

  update_view = function(data) {
    data = $.parseJSON(data);
    if (data.win) {
      win();
    }
    if (data.question) {
      question_time(data.question);
    } else {
      end_question_time();
    }
    if (data.messages) {
      log_messages(data.messages);
    }
    render_board(data);
    $("#last_update").text(new Date());
    return update_buddy_list(data);
  };

  log_messages = function(messages) {
    var lw, message, _i, _len, _results;
    _results = [];
    for (_i = 0, _len = messages.length; _i < _len; _i++) {
      message = messages[_i];
      $("#log_window").append("<div class='sender'>" + message[0] + "</div>");
      $("#log_window").append("<div class='message'>" + message[1] + "</div>");
      lw = $("#log_window").get(0);
      _results.push(lw.scrollTop = lw.scrollHeight);
    }
    return _results;
  };

  end_question_time = function() {
    $("#question_dialog").hide();
    return $("#question_dialog input[type=text]").val("");
  };

  move = function(x, y) {
    return function() {
      return $.ajax({
        url: server_url,
        data: {
          x: x,
          y: y
        },
        success: update_view
      });
    };
  };

  flag = function(x, y) {
    return function(event) {
      event.preventDefault();
      $.ajax({
        url: server_url,
        data: {
          flag: true,
          x: x,
          y: y
        },
        success: update_view
      });
      return false;
    };
  };

  render_board = function(data) {
    var board, item, new_button, row, table, table_cell, table_row, xpos, ypos, _i, _j, _len, _len1, _ref, _ref1;
    board = $("#board_wrapper");
    board.html("");
    table = $("<table>");
    board.append(table);
    ypos = 0;
    _ref = data.state;
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      row = _ref[_i];
      table_row = $("<tr>");
      table.append(table_row);
      xpos = 0;
      for (_j = 0, _len1 = row.length; _j < _len1; _j++) {
        item = row[_j];
        item = item === null ? " " : item;
        new_button = $("<button class='mine_button'>" + item + "</button>");
        if ((0 <= (_ref1 = parseInt(item)) && _ref1 <= 8)) {
          new_button.addClass("mine_" + item);
        }
        if ((parseInt(item)) === -1) {
          new_button.html("<i class='icon-asterisk'></i>");
        }
        if ((parseInt(item)) === -2) {
          new_button.html("<i class='icon-flag'></i>");
        }
        new_button.click(move(ypos, xpos));
        new_button.contextmenu(flag(ypos, xpos));
        table_cell = $("<td></td>");
        table_cell.append(new_button);
        table_row.append(table_cell);
        xpos += 1;
      }
      board.append("</tr>");
      ypos += 1;
    }
    return board.append("</table>");
  };

  init_chat = function() {
    return $("#chat_form").submit(function(event) {
      event.preventDefault();
      if ($("#chat_form input").val()) {
        $.ajax({
          url: server_url,
          data: {
            message: $("#chat_form input").val()
          },
          success: update_view
        });
        $("#chat_form input").val("");
      }
      return false;
    });
  };

  update_buddy_list = function(data) {
    var buddies, buddy, entry, _i, _len, _results;
    buddies = data.connected;
    $("#buddy_list").html("");
    _results = [];
    for (_i = 0, _len = buddies.length; _i < _len; _i++) {
      buddy = buddies[_i];
      entry = $("<div class='buddy_list_item'>");
      entry.append($("<div class='bear_small bear_" + buddy[1] + "'>"));
      if (data.player[1] === buddy[1]) {
        entry.append($("<p>" + buddy[0] + " (you)</p>"));
      } else {
        entry.append($("<p>" + buddy[0] + "</p>"));
      }
      entry.append($("<p>" + buddy[2] + "</p>"));
      _results.push($("#buddy_list").append(entry));
    }
    return _results;
  };

  init_ip_form = function() {
    $("#ip_form input").val(server_url);
    return $("#ip_form").submit(update_url);
  };

  $(function() {
    init_ip_form();
    init_chat();
    end_question_time();
    update();
    return start_update_clock();
  });

}).call(this);
